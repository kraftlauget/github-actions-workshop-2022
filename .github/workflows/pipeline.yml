name: "pipeline"
on: push

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: build/


  run_tests:
    needs: [build_linux]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Run tests
        run: yarn test

  run_lint:
    needs: [build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  deploy:
    needs: [build_linux, run_tests, run_lint]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-build
          path: build/
      
      - name: Install Netlify cli
        run: |
          npm install netlify-cli@10.1.0 -g

      - name: Deploy to netlify
        run: |
          netlify deploy --dir=prod --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.TEAM_1_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
