name: "pipeline"
on: push

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: build/
          key: ${{ hashFiles('src/') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/

  run_tests:
    needs: [build_linux]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Run tests
        run: yarn test

  run_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  deploy:
    needs: [build_linux, run_tests, run_lint]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build/
      
      - name: Deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_SITE_ID: ${{ secrets.TEAM_2_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        with:
          args: deploy --dir=build --prod
          secrets: '["NETLIFY_AUTH_TOKEN", NETLIFY_SITE_ID"]'
